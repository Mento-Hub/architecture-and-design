@startuml
actor User
participant "Frontend" as FE
participant "Djoser Auth\nEndpoint" as Auth
participant "Custom Auth\nBackend" as Backend
participant "UserCredentials\nModel" as UCModel
participant "AuthToken\nModel" as Token
participant "Role Service" as RoleService
participant "Cache" as Cache
participant "AuthLog" as Log

User -> FE: Enter credentials\n(email/EEN + password)
FE -> Auth: POST /auth/token/login/\n{username, password}

Auth -> Backend: authenticate(username, password)
Backend -> UCModel: find by email or EEN
alt Valid credentials
    UCModel --> Backend: UserCredentials found
    Backend -> Backend: verify password
    Backend -> RoleService: get user roles
    RoleService --> Backend: roles[]
    Backend -> Token: create JWT tokens
    Token --> Backend: {access_token, refresh_token}
    Backend -> Cache: store user data & roles
    Backend -> Log: log success event
    Backend --> Auth: User authenticated
    Auth --> FE: 200 OK\n{auth_token, user_data, roles}
    FE -> FE: Store token
    FE -> FE: Redirect based on role
else Invalid credentials
    UCModel --> Backend: Not found/Invalid
    Backend -> Log: log failed attempt
    Backend --> Auth: Authentication failed
    Auth --> FE: 401 Unauthorized\n{detail: "Invalid Credentials"}
    FE -> User: Show error message
end
@enduml
